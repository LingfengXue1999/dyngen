# Generated by roxygen2: do not edit by hand

export(backbone)
export(backbone_bifurcating)
export(backbone_bifurcating_converging)
export(backbone_bifurcating_cycle)
export(backbone_bifurcating_loop)
export(backbone_binary_tree)
export(backbone_consecutive_bifurcating)
export(backbone_converging)
export(backbone_cycle)
export(backbone_linear)
export(backbone_linear_long)
export(backbone_trifurcating)
export(calculate_dimred)
export(experiment_snapshot)
export(experiment_synchronised)
export(feature_network_default)
export(generate_cells)
export(generate_experiment)
export(generate_feature_network)
export(generate_gold_standard)
export(generate_kinetics)
export(generate_tf_network)
export(gold_standard_default)
export(initialise_model)
export(kinetics_custom)
export(kinetics_default)
export(list_backbones)
export(list_experiment_samplers)
export(plot_backbone)
export(plot_feature_network)
export(plot_gold_mappings)
export(plot_gold_simulations)
export(plot_simulations)
export(simulation_default)
export(tf_network_random)
export(wrap_dyngen_dataset)
import(assertthat)
import(dplyr)
import(dynutils)
import(dynwrap)
import(ggplot2)
import(methods)
import(readr)
import(tidyr)
importFrom(igraph,graph_from_data_frame)
importFrom(igraph,layout.graphopt)
importFrom(igraph,plot.igraph)
importFrom(magrittr,"%<>%")
importFrom(purrr,"%>%")
importFrom(purrr,imap)
importFrom(purrr,invoke)
importFrom(purrr,keep)
importFrom(purrr,map)
importFrom(purrr,map2)
importFrom(purrr,map2_df)
importFrom(purrr,map_chr)
importFrom(purrr,map_dbl)
importFrom(purrr,map_df)
importFrom(purrr,map_int)
importFrom(purrr,map_lgl)
importFrom(purrr,pmap)
importFrom(purrr,set_names)
importFrom(reshape2,acast)
importFrom(reshape2,melt)
importFrom(tibble,as_data_frame)
importFrom(tibble,as_tibble)
importFrom(tibble,column_to_rownames)
importFrom(tibble,data_frame)
importFrom(tibble,deframe)
importFrom(tibble,enframe)
importFrom(tibble,is_tibble)
importFrom(tibble,lst)
importFrom(tibble,rownames_to_column)
importFrom(tibble,tibble)
importFrom(tibble,tribble)
importFrom(viridis,scale_color_viridis)
