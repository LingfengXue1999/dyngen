% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/7_experiment.R
\name{generate_experiment}
\alias{generate_experiment}
\alias{list_experiment_samplers}
\alias{experiment_snapshot}
\alias{experiment_synchronised}
\title{Sample cells from the simulations}
\usage{
generate_experiment(model)

list_experiment_samplers()

experiment_snapshot(
  realcount = NULL,
  map_reference_cpm = TRUE,
  map_reference_ls = TRUE,
  weight_bw = 0.1
)

experiment_synchronised(
  realcount = NULL,
  map_reference_cpm = TRUE,
  map_reference_ls = TRUE,
  num_timepoints = 8,
  pct_between = 0.75
)
}
\arguments{
\item{model}{A dyngen intermediary model for which the simulations have been run with \code{\link[=generate_cells]{generate_cells()}}.}

\item{realcount}{The name of a dataset in \link{realcounts}. If \code{NULL}, a random
dataset will be sampled from \link{realcounts}.}

\item{map_reference_cpm}{Whether or not to try to match the CPM distribution to that of a reference dataset.}

\item{map_reference_ls}{Whether or not to try to match the distribution of the library sizes to that of the reference dataset.}

\item{weight_bw}{[snapshot] A bandwidth parameter for determining the distribution of
cells along each edge in order to perform weighted sampling.}

\item{num_timepoints}{[synchronised] The number of time points used in the experiment.}

\item{pct_between}{[synchronised] The percentage of 'unused' simulation time.}
}
\value{
A dyngen model.
}
\description{
\code{\link[=generate_experiment]{generate_experiment()}} runs samples cells along the different simulations.
\code{\link[=experiment_snapshot]{experiment_snapshot()}} assumes that cells are sampled from a heterogeneous pool of cells.
Cells will thus be sampled uniformily from the trajectory.
\code{\link[=experiment_synchronised]{experiment_synchronised()}} assumes that all the cells are synchronised and
are sampled at different timepoints.
}
\examples{
names(list_experiment_samplers())

model <- 
  initialise_model(
    backbone = backbone_bifurcating(),
    experiment = experiment_synchronised()
  )
\dontshow{
# actually use a smaller example 
# to reduce execution time during
# testing of the examples
model <- initialise_model(
  backbone = model$backbone,
  num_cells = 5,
  num_targets = 0,
  num_hks = 0,
  gold_standard_params = gold_standard_default(census_interval = 1, tau = 0.1),
  simulation_params = simulation_default(
    burn_time = 10,
    total_time = 10,
    census_interval = 1,
    ssa_algorithm = ssa_etl(tau = 0.1),
    experiment_params = simulation_type_wild_type(num_simulations = 1)
  )
)
}
\donttest{
model <- 
  model \%>\%
  generate_tf_network() \%>\%
  generate_feature_network() \%>\%
  generate_kinetics() \%>\%
  generate_gold_standard() \%>\%
  generate_cells() \%>\%
  generate_experiment() 
  
dataset <- as_dyno(model)
}
}
